# -*- coding: utf-8 -*-
"""
Django settings for board-service project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import os
import environ

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

env = environ.Env()

env.read_env(os.path.join(BASE_DIR, '.env'))


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ['DB_NAME'],
        'USER': os.environ['DB_USER'],
        'PASSWORD': os.environ['DB_PASSWORD'],
        'HOST': os.environ['DB_HOST'],
        'PORT': os.environ['DB_PORT'],
    }
}

GS_BUCKET_NAME = os.environ['GS_BUCKET_NAME']

NOTIFICATION_MICRO_SERVICE_URL = os.environ['NOTIFICATION_MICRO_SERVICE_URL']
PROCUREMENT_MICRO_SERVICE_URL = os.environ['PROCUREMENT_MICRO_SERVICE_URL']

SECRET_KEY = 'smaplesecurity_key_required_here'

DEBUG = os.environ['DEBUG']

APP_URL = os.environ['APP_URL']

AUTH_MICRO_SERVICE_URL = os.environ['AUTH_MICRO_SERVICE_URL']

ALLOWED_HOSTS = ['*']

INSTALLED_APPS = (
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_swagger',
    'api',
    'django_extensions',
)

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'api.middlewares.InnovoAuthMiddleware'
]

ROOT_URLCONF = 'board-service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'board-service.wsgi.application'

REST_FRAMEWORK = {

    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (),
    'EXCEPTION_HANDLER': 'api.exception_handler_utils.custom_exception_handler'
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

CORS_ORIGIN_ALLOW_ALL = True

DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'

os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = os.path.join(BASE_DIR, "conf/gcloud_auth.json")


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {funcName} {lineno} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {asctime} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'gcp_file_upload': {
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'gcp_file_upload.log',
            'maxBytes': 1024*1024*5,  # 5 MB
            'backupCount': 5,
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django.server': {
            'handlers': ['gcp_file_upload'],
            'level': 'DEBUG',
        },
    },
}

STAGES = [
    {"name":"To do", "is_default":"True", "position":1},
    {"name":"In Progress", "is_default":"True", "position":2},
    {"name":"Done", "is_default":"True", "position":3}
]

LABELS = [
    {'name': "green-one", "color_code": "#61bd4f"},
    {'name': "green-two", "color_code": "#61bd4f"},
    {'name': "yellow-one", "color_code": "#d9b51c"},
    {'name': "yellow-two", "color_code": "#f2d600"},
    {'name': "orange", "color_code": "#ff9f1a"},
    {'name': "red", "color_code": "#eb5a46"},
    {'name': "purple", "color_code": "#c377e0"},
    {'name': "blue", "color_code": "#055a8c"},
    {'name': "light", "color_code": "#97a0af"}
]

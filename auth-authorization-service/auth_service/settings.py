# -*- coding: utf-8 -*-
"""
Django settings for notification_service project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import os
import environ
from datetime import timedelta

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

env = environ.Env()
env.read_env(os.path.join(BASE_DIR, '.env'))


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ['DB_NAME'],
        'USER': os.environ['DB_USER'],
        'PASSWORD': os.environ['DB_PASSWORD'],
        'HOST': os.environ['DB_HOST'],
        'PORT': os.environ['DB_PORT'],
    }
}

GS_BUCKET_NAME = os.environ['GS_BUCKET_NAME']

NOTIFICATION_MICRO_SERVICE_URL = os.environ['NOTIFICATION_MICRO_SERVICE_URL']

APP_URL = os.environ['APP_URL']

WEATHER_APP_ID = os.environ['WEATHER_APP_ID']

WEATHER_APP_URL = 'http://api.openweathermap.org/data/2.5/forecast'  # 'http://api.openweathermap.org/data/2.5/weather/'


SECRET_KEY = '<security_key>'

DEBUG = os.environ['DEBUG']

ALLOWED_HOSTS = ['*']

INSTALLED_APPS = (
    'django_extensions',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_swagger',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'api',
)

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',

]

ROOT_URLCONF = 'auth_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'auth_service.wsgi.application'

REST_FRAMEWORK = {

    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'EXCEPTION_HANDLER': 'api.exception_handler_utils.custom_exception_handler'
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttribute'
                'SimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLength'
                'Validator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPassword'
                'Validator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPassword'
                'Validator',
    },
]

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, "static")

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

CORS_ORIGIN_ALLOW_ALL = True

DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'

os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = os.path.join(BASE_DIR, "conf/gcloud_auth.json")


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.dirname(
                os.path.dirname(
                    os.path.abspath(
                        __file__,
                    ),
                ),
            )+'/'+'auth.log',
        },
    },
    'loggers': {
        'api': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

AUTH_USER_MODEL = 'api.User'

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'JTI_CLAIM': 'jti',
    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

PERMISSIONS = [
    {'name': 'Can view project details', 'code': 'can_view_project_details'},
    {'name': 'Can add project details', 'code': 'can_add_project_details'},
    {'name': 'Can edit project details', 'code': 'can_edit_project_details'},
    {'name': 'Can delete project details', 'code': 'can_delete_project_details'},

    {'name': 'Can view media', 'code': 'can_view_media'},
    {'name': 'Can add media', 'code': 'can_add_media'},
    {'name': 'Can edit media', 'code': 'can_edit_media'},
    {'name': 'Can delete media', 'code': 'can_delete_media'},

    {'name': 'Can view members', 'code': 'can_view_members'},
    {'name': 'Can add members', 'code': 'can_add_members'},
    {'name': 'Can edit members', 'code': 'can_edit_members'},
    {'name': 'Can delete members', 'code': 'can_delete_members'},

    {'name': 'Can view plan', 'code': 'can_view_plan'},
    {'name': 'Can add plan', 'code': 'can_add_plan'},
    {'name': 'Can edit plan', 'code': 'can_edit_plan'},
    {'name': 'Can delete plan', 'code': 'can_delete_plan'},

    {'name': 'Can view contract', 'code': 'can_view_contract'},
    {'name': 'Can add contract', 'code': 'can_add_contract'},
    {'name': 'Can edit contract', 'code': 'can_edit_contract'},
    {'name': 'Can delete contract', 'code': 'can_delete_contract'},

    {'name': 'Can view product', 'code': 'can_view_product'},
    {'name': 'Can add product', 'code': 'can_add_product'},
    {'name': 'Can edit product', 'code': 'can_edit_product'},
    {'name': 'Can delete product', 'code': 'can_delete_product'},

    {'name': 'Can view ganttchart', 'code': 'can_view_ganttchart'},
    {'name': 'Can add ganttchart', 'code': 'can_add_ganttchart'},
    {'name': 'Can edit ganttchart', 'code': 'can_edit_ganttchart'},
    {'name': 'Can delete ganttchart', 'code': 'can_delete_ganttchart'},

    {'name': 'Can view board', 'code': 'can_view_board'},
    {'name': 'Can add board', 'code': 'can_add_board'},
    {'name': 'Can edit board', 'code': 'can_edit_board'},
    {'name': 'Can delete board', 'code': 'can_delete_board'},

    {'name': 'Can view procurement', 'code': 'can_view_procurement'},
    {'name': 'Can add procurement', 'code': 'can_add_procurement'},
    {'name': 'Can edit procurement', 'code': 'can_edit_procurement'},
    {'name': 'Can delete procurement', 'code': 'can_delete_procurement'},

    {'name': 'Can view monitoring', 'code': 'can_view_monitoring'},
    {'name': 'Can add monitoring', 'code': 'can_add_monitoring'},
    {'name': 'Can edit monitoring', 'code': 'can_edit_monitoring'},
    {'name': 'Can delete monitoring', 'code': 'can_delete_monitoring'},

    {'name': 'Can view cost control client', 'code': 'can_view_cost_control_client'},
    {'name': 'Can add cost control client', 'code': 'can_add_cost_control_client'},
    {'name': 'Can edit cost control client', 'code': 'can_edit_cost_control_client'},
    {'name': 'Can delete cost control client', 'code': 'can_delete_cost_control_client'},


    {'name': 'Can view cost control internal', 'code': 'can_view_cost_control_internal'},
    {'name': 'Can add cost control internal', 'code': 'can_add_cost_control_internal'},
    {'name': 'Can edit cost control internal', 'code': 'can_edit_cost_control_internal'},
    {'name': 'Can delete cost control internal', 'code': 'can_delete_cost_control_internal'},
]

PAGE_TEMPLATES = ('safety', 'quality')
